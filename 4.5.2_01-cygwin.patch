--- origsrc/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/Utilities.java	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/Utilities.java	2009-12-01 20:57:07.093955300 -0600
@@ -78,6 +78,8 @@ public class Utilities {
     public enum OperatingSystem {
     /** Windows */
         Windows,
+    /** Cygwin */
+        Cygwin,
     /** MacOSX */
         MacOSX,
     /** Linux */
@@ -162,6 +164,7 @@ public class Utilities {
     private static OperatingSystem decideOperatingSystem() {
         String osName = System.getProperty("os.name").toLowerCase();
         if (osName.startsWith("windows")) return OperatingSystem.Windows;
+        if (osName.startsWith("cygwin")) return OperatingSystem.Cygwin;
         if (osName.startsWith("mac os x")) return OperatingSystem.MacOSX;
         return OperatingSystem.Linux;
     }
@@ -189,6 +192,7 @@ public class Utilities {
 
         switch (operatingSystem) {
         case Windows:
+        case Cygwin:
             dot = lib.indexOf(".dll");
             break;
         case Linux:
--- origsrc/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/internal/NativeLibraryManager.java	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/internal/NativeLibraryManager.java	2009-12-01 20:58:37.246512500 -0600
@@ -597,6 +597,7 @@ public class NativeLibraryManager {
     private static String jniLibraryName(String lib) {
         switch (Utilities.operatingSystem) {
         case Windows: return lib + ".dll";
+        case Cygwin: return "cyg" + lib + "-1.dll";
         case MacOSX: return "lib" + lib + ".jnilib";
         case Linux: return "lib" + lib + ".so";
         }
@@ -610,6 +611,8 @@ public class NativeLibraryManager {
             return Utilities.configuration == Utilities.Configuration.Debug
                 ? lib + "d" + version + ".dll"
                 : lib + version + ".dll";
+        case Cygwin:
+            return "cyg" + lib + "-" + version + ".dll";
         case MacOSX:
             return Utilities.configuration == Utilities.Configuration.Debug
                 ? "lib" + lib + "_debug." + version + ".dylib"
@@ -631,6 +634,7 @@ public class NativeLibraryManager {
 
         switch (Utilities.operatingSystem) {
         case Windows:
+        case Cygwin:
             dot = lib.indexOf(".dll");
             break;
         case Linux:
--- origsrc/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/internal/OSInfo.java	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/com/trolltech/qt/internal/OSInfo.java	2009-12-01 19:42:55.232592800 -0600
@@ -54,6 +54,7 @@ public class OSInfo
     public enum OS
     {
         Unknown,
+        Cygwin,
         Windows,
         Linux,
         MacOS,
@@ -68,6 +69,8 @@ public class OSInfo
             String osname = System.getProperty("os.name").toLowerCase();
             if (osname.contains("linux"))
                 os = OS.Linux;
+            else if (osname.contains("cygwin"))
+                os = OS.Cygwin;
             else if (osname.contains("windows"))
                 os = OS.Windows;
             else if (osname.contains("mac os x"))
@@ -100,6 +103,9 @@ public class OSInfo
                              ? "linux64"
                              : "linux32";
                 break;
+            case Cygwin:
+                osArchName = "cygwin";
+                break;
             case MacOS:
                 osArchName = "macosx";
                 break;
--- origsrc/qtjambi-src-lgpl-4.5.2_01/com/trolltech/tools/ant/InitializeTask.java	2009-12-01 19:39:36.098245600 -0600
+++ src/qtjambi-src-lgpl-4.5.2_01/com/trolltech/tools/ant/InitializeTask.java	2009-12-01 19:45:14.339035400 -0600
@@ -260,6 +260,7 @@ public class InitializeTask extends Task
                 }
 
                 break;
+            case Cygwin:
             case MacOS:
                 compiler = Compiler.GCC;
                 break;
--- origsrc/qtjambi-src-lgpl-4.5.2_01/com/trolltech/tools/ant/LibraryEntry.java	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/com/trolltech/tools/ant/LibraryEntry.java	2009-12-01 19:39:38.422649700 -0600
@@ -164,6 +164,7 @@ public class LibraryEntry extends Task {
         } else {
             switch (OSInfo.os()) {
             case Windows: return name + "4.dll";
+            case Cygwin: return "cyg" + name + "-4.dll";
             case MacOS: return "lib" + name + ".dylib";
             case Solaris:
             case Linux: return "lib" + name + ".so";
@@ -189,6 +190,7 @@ public class LibraryEntry extends Task {
         } else {
             switch (OSInfo.os()) {
             case Windows: return name + version + ".dll";
+            case Cygwin: return "cyg" + name + "-" + version + ".dll";
             case MacOS: return "lib" + name + "." + version + ".dylib";
             case Solaris:
             case Linux: return "lib" + name + ".so." + version;
@@ -208,6 +210,7 @@ public class LibraryEntry extends Task {
         } else {
             switch (OSInfo.os()) {
             case Windows: return name + ".dll";
+            case Cygwin: return "cyg" + name + ".dll";
             case MacOS: return "lib" + name + ".dylib";
             case Solaris:
             case Linux: return "lib" + name + ".so";
@@ -227,6 +230,7 @@ public class LibraryEntry extends Task {
         } else {
             switch (OSInfo.os()) {
             case Windows: return name + ".dll";
+            case Cygwin: return "cyg" + name + ".dll";
             case MacOS: return "lib" + name + ".jnilib";
             case Solaris:
             case Linux: return "lib" + name + ".so";
--- origsrc/qtjambi-src-lgpl-4.5.2_01/qtjambi/qtjambi_core.cpp	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/qtjambi/qtjambi_core.cpp	2009-12-01 22:18:38.242340800 -0600
@@ -1695,6 +1695,26 @@ static QString locate_vm()
     return locate_vm_linux_and_solaris();
 }
 
+#elif defined(Q_OS_CYGWIN)
+
+static QString locate_vm()
+{
+    // If libjvm is already loaded, make sure we report the same jvm.
+    QFile file("/proc/self/maps");
+    if (file.open(QIODevice::ReadOnly | QIODevice::Text)) {
+        QTextStream in(&file);
+        QString line = in.readLine();
+        while (!line.isNull()) {
+            if(line.endsWith("/cygjvm.dll")) {
+                return line.mid(line.indexOf('/'));
+            }
+            line = in.readLine();
+        }
+    }
+
+    return QString("cygjvm.dll");
+}
+
 #elif defined(Q_OS_WIN)
 
 // Windows version
--- origsrc/qtjambi-src-lgpl-4.5.2_01/qtjambi/qtjambilink.cpp	2009-07-27 06:00:54.000000000 -0500
+++ src/qtjambi-src-lgpl-4.5.2_01/qtjambi/qtjambilink.cpp	2009-12-01 19:39:38.438249700 -0600
@@ -95,7 +95,7 @@ int QtJambiLinkUserData::id()
 
 inline static void deleteWeakObject(JNIEnv *env, jobject object)
 {
-#ifdef Q_CC_MINGW
+#if defined(Q_CC_MINGW) || defined(Q_OS_CYGWIN)
     env->DeleteWeakGlobalRef( (jweak) object);
 #else
     env->DeleteWeakGlobalRef(object);
@@ -341,7 +341,7 @@ void QtJambiLink::setGlobalRef(JNIEnv *e
     // Delete the weak ref and replace it with a global ref
     } else {
         jobject globalRef = env->NewGlobalRef(m_java_object);
-        env->DeleteWeakGlobalRef(m_java_object);
+        env->DeleteWeakGlobalRef((jweak)m_java_object);
 
         m_global_ref = true;
         m_java_object = globalRef;
